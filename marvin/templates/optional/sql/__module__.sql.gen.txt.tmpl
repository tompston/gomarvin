{{ $table_name 	    := ConvertToLowercasePlural .Modules.Name  -}}
{{ $lwc_name 	    := ConvertToLowercase .Modules.Name  -}}
{{ $id 			    := printf "%s%s" $lwc_name "_id"  -}}
{{ $endpoints       := .Modules.Endpoints -}}

-- Code generated by gomarvin, {{.ProjectInfo.GomarvinVersion}}

CREATE TABLE IF NOT EXISTS {{ $table_name }} (
  -- init
  {{ $id }}         BIGSERIAL         PRIMARY KEY,
  created_at        TIMESTAMP         NOT NULL DEFAULT NOW(),
  updated_at        TIMESTAMP         NOT NULL DEFAULT NOW()

  -- new columns below

);


-- when the row is updated, update the "updated_at" timestamp
CREATE TRIGGER set_timestamp BEFORE UPDATE ON {{ $table_name }}
FOR EACH ROW EXECUTE PROCEDURE trigger_set_timestamp();

{{ if $endpoints -}}
{{ range $endpoint := $endpoints }}


{{- if ( eq $endpoint.Method "GET") }}
-- name: {{ $endpoint.ControllerName}} :many
SELECT      *
FROM        {{ $table_name }}
RETURNING   *;
{{ end -}}


{{- if ( eq $endpoint.Method "POST") }}
-- name: {{ $endpoint.ControllerName}} :one
INSERT INTO {{ $table_name }} ( column_name ) 
VALUES      ( $1 )
RETURNING   *;
{{ end -}}


{{- if ( eq $endpoint.Method "DELETE") }}
-- name: {{ $endpoint.ControllerName}} :one
DELETE FROM {{ $table_name }}
WHERE       {{ $id }} = $1
RETURNING   *;
{{ end -}}


{{- if ( eq $endpoint.Method "PUT") }}
-- name: {{ $endpoint.ControllerName }} :one
UPDATE      {{ $table_name }}
SET         column_name = $1
WHERE       column_name = $2
RETURNING   *;
{{ end -}}


{{ end -}}
{{ end }}