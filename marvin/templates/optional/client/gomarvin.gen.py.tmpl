{{ $project_info  := .ProjectInfo -}}
{{ $modules       := .Modules     -}}
"""

API client generated by gomarvin, DO NOT EDIT!

Rename the current file if you want to 
edit it and save changes.

Repo             : https://github.com/tompston/gomarvin
Docs             : https://gomarvin.pages.dev/docs
Editor           : https://gomarvin.pages.dev
project_name     : "{{$project_info.Name}}",
config_version   : "{{ $project_info.ConfigVersion}}"
gomarvin_version : "{{ ConvertLastCharTo $project_info.GomarvinVersion "x" }}"

"""

from dataclasses import dataclass
from typing import Dict, Optional
import requests


@dataclass
class Client:
    """
    The API client used by the fetch function.
    """
    host_url: str
    api_prefix: str
    headers: Dict[str, str]


@dataclass
class ApiResponse:
    """
    Interface for the expected response.
    """
    data: any
    message: str
    status: int
    links: Optional[Dict[str, str]] = None


@dataclass
class OptionalParams:
    """
    Optional interface used in the fetch request with optional parameters.
    """
    options: Optional[Dict[str, any]] = None
    append_url: Optional[str] = None


defaultClient = Client(
    host_url="http://localhost:{{$project_info.Port}}",
    api_prefix="{{$project_info.APIPrefix}}",
    headers={
        "Content-type": "application/json;charset=UTF-8",
    }
)

{{- if $modules -}}
  {{- range $module := $modules -}}
    {{- if $module.Endpoints }}
      {{- range $endpoint := $module.Endpoints }}
        {{- if $endpoint.Body }}
@dataclass
class {{ $endpoint.ControllerName }}Body:
    """
    ### Body for the {{$endpoint.ControllerName}} endpoint

    {{ range $body_field := $endpoint.Body -}}
    @field {{$body_field.Field}} `{{$body_field.Validate}}`
    {{ end -}}
    """
  {{- range $body_field := $endpoint.Body }}
  {{ if 
( eq $body_field.Type  "string" )    }}  {{ TypescriptField $body_field.Field $body_field.Validate }}: str  {{ end -}}
  {{- if or  
      ( eq $body_field.Type  "int"     ) 
      ( eq $body_field.Type  "int64"   ) 
      ( eq $body_field.Type  "int32"   ) 
      ( eq $body_field.Type  "int16"   ) 
      ( eq $body_field.Type  "int8"    ) 
      ( eq $body_field.Type  "uint"    ) 
      ( eq $body_field.Type  "uint64"  ) 
      ( eq $body_field.Type  "uint32"  ) 
      ( eq $body_field.Type  "uint16"  ) 
      ( eq $body_field.Type  "uint8"   ) -}} 
            {{ TypescriptField $body_field.Field $body_field.Validate }}: int {{ end -}}
    {{- if or  
      ( eq $body_field.Type  "float64" )
      ( eq $body_field.Type  "float32" )    -}} 
    {{ TypescriptField $body_field.Field $body_field.Validate }}: float {{ end -}}
  {{ if (eq $body_field.Type  "time.Time" )    -}} {{ TypescriptField $body_field.Field $body_field.Validate }}: string {{ end -}}
  {{ if (eq $body_field.Type  "bool"      )    -}} {{ TypescriptField $body_field.Field $body_field.Validate }}: bool {{ end -}}
  {{ end }}
                {{ end -}}
            {{- end -}}
        {{- end -}}
    {{ end -}}
{{ end -}}