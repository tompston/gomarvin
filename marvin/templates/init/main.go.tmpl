{{ $go_version      := .ProjectInfo.GoVersion -}}
{{ $project_name    := .ProjectInfo.Name -}}
{{ $api_v 		    := ApiVersion .ProjectInfo.APIPrefix -}}
// Server generated by gomarvin, {{ ConvertLastCharTo .ProjectInfo.GomarvinVersion "x" }}
// Repo : https://github.com/tompston/gomarvin
// Docs : https://gomarvin.pages.dev/docs

package main

import (
	"context"
	"{{$project_name}}/internal/api/{{ $api_v }}/server"
	"{{$project_name}}/pkg/app"
	"{{$project_name}}/pkg/settings"
	"fmt"
	"log"

	{{- if ( eq .ProjectInfo.Framework "chi") }}
	"net/http"
	{{ end }}
)


func main() {
	app, err := app.NewApp(context.TODO())
	if err != nil {
		log.Fatal(err)
	}
	defer app.Exit(context.TODO())


	address := fmt.Sprintf("localhost:%v", settings.BACKEND_PORT)
	server := server.Start()

	{{- if ( eq .ProjectInfo.Framework "gin") }}
	server.Run(address) // run the server
	{{- end }}

	{{- if ( eq .ProjectInfo.Framework "fiber") }}
	server.Listen(address) // run the server
	{{- end }}

	{{- if ( eq .ProjectInfo.Framework "echo") }}
	server.Logger.Fatal(server.Start(address)) // run the server
	{{- end }}

	{{- if ( eq .ProjectInfo.Framework "chi") }}
	http.ListenAndServe(address, server) // run the server
	{{- end }}
}