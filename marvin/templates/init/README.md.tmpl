{{ $GOLANG_PORT     := .ProjectInfo.Port -}}
{{ $PROJECT_NAME    := .ProjectInfo.Name -}}

# {{ $PROJECT_NAME }}

```bash
# download the dependencies and run the server
go mod tidy
go mod download
go run cmd/api/main.go
```

### Init project structure

```bash
├── cmd                 # holds the entrypoint for the backend server
├── internal            
│   └── api            
│       ├── modules     # holds the generated modules
│       └── server      # holds all routes and the function which sets up the server
├── pkg
│   ├── convert         # holds util functions for converting types ( used in the settings package )
│   ├── app             # holds functions which initialize the environment for the application
│   ├── response        # holds a predefined response function and response messages
│   ├── settings        # holds util functions for loading .env vars and storing them in the settings.Environment variable
│   │   ├── database
│   └── validate        # holds functions which check if passed down structs pass their validation tags
└── client
    └── gomarvin.gen.ts # holds the generated typescript client
```

#### Update on change

```bash
# https://github.com/cespare/reflex
reflex -r '\.go' -s -- sh -c "go run cmd/api/main.go"
```

#### Renaming generated sql files from `.sql.gen.txt` to `.sql`

```bash
# run from the root of the project
for i in ./db/sql/*.sql.gen.txt;  do mv "$i" "${i/.sql.gen.txt}.sql"; done
```