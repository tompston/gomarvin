{{ $project_name    := .ProjectInfo.Name -}}
// Package environment is responsible for setting up the
// environment for the go app on the initialization.
package environment

import (
	"{{ $project_name }}/cmd"
	"{{ $project_name }}/pkg/settings"
	"{{ $project_name }}/pkg/settings/database"
)

// Setup the environment for the go app on the initialization:
//   - read .env config file and store it in settings.Environment variable
//   - store db connection in the database.dbConn variable
func Setup(args cmd.CliArgs) error {
	if err := settings.SetEnvironmentConfig(args.Conf); err != nil {
		return err
	}

	{{ if ( eq .ProjectInfo.DbType "postgres") }}
	db := settings.Environment.Database
	dsn_string := database.DsnString(db.Host, db.User, db.Pass, db.Name, db.Port, db.SSL, db.Timezone)
	if err := database.Connect(dsn_string); err != nil {
		return err
	}
	{{ end }}


	{{ if ( eq .ProjectInfo.DbType "mysql") }}
	db := settings.Environment.Database
	dsn_string := database.DsnString(db.User, db.Pass, db.Name)
	if err := database.Connect(dsn_string); err != nil {
		return err
	}
	{{ end }}


	{{ if ( eq .ProjectInfo.DbType "sqlite") }}
	db := settings.Environment.Database
	dsn_string := database.DsnString("test.db")
	if err := database.Connect(dsn_string); err != nil {
		return err
	}
	{{ end }}


	return nil
}
